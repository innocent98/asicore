{"version":3,"file":"static/js/45.18c2eeed.chunk.js","mappings":"sOAkEA,UA3Dc,WACZ,IAAQA,GAAeC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAhDH,WACFI,GAAWC,EAAAA,EAAAA,MAEjBC,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAQlBI,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEL,OADvBL,EAAEM,iBACFpB,GAASqB,EAAAA,EAAAA,OAAcJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEHG,EAAAA,EAAAA,KAAW,0CAAwCC,EAAAA,EAAAA,GAAA,GAChEjB,IACF,KAAD,EAFIS,EAAGE,EAAAO,KAGTxB,GAASyB,EAAAA,EAAAA,IAAaV,EAAIW,OAAOT,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEjCW,MAAMX,EAAAU,GAAME,SAASH,MACrB1B,GAAS8B,EAAAA,EAAAA,OAAgB,yBAAAb,EAAAc,OAAA,GAAAlB,EAAA,kBAE5B,gBAZkBmB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,KAcnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2CACJC,EAAAA,EAAAA,KAAA,aAGFA,EAAAA,EAAAA,KAAA,WAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,MAAMI,SAAUhC,EAAc6B,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,SAAOG,QAAQ,GAAGC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,QAASP,SAAC,iDAGlEC,EAAAA,EAAAA,KAAA,SACEO,KAAK,OACLC,YAAY,0BACZC,UAAQ,EACRC,KAAK,UACLC,SAxCO,SAACnC,GACpBP,GAAU,SAACW,GACT,OAAAK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYL,GAAI,IAAAgC,EAAAA,EAAAA,GAAA,GAAGpC,EAAEqC,OAAOH,KAAOlC,EAAEqC,OAAOC,OAC9C,GACF,QAuCUd,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAASQ,SAAUzD,EAAWyC,SACxCzC,EAAa,iBAAmB,qBAO/C,C","sources":["pages/airdrop/Login.jsx"],"sourcesContent":["import Topbar from \"../../components/topbar/Topbar\";\nimport \"./airdrop.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginFailure, loginStart, loginSuccess } from \"../../redux/userRedux\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Login = () => {\n  const { isFetching } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  const [inputs, setInputs] = useState({});\n\n  const handleChange = (e) => {\n    setInputs((prev) => {\n      return { ...prev, [e.target.name]: e.target.value };\n    });\n  };\n\n  const handleAirdrop = async (e) => {\n    e.preventDefault();\n    dispatch(loginStart());\n    try {\n      const res = await axios.post(\"https://api.asicore.xyz/api/user/login\", {\n        ...inputs,\n      });\n      dispatch(loginSuccess(res.data));\n    } catch (error) {\n      alert(error.response.data);\n      dispatch(loginFailure());\n    }\n  };\n\n  return (\n    <div className=\"airdrop\">\n      <Topbar />\n      <div className=\"airdropCon\">\n        <section>\n          <h4>Login to see your airdrop information</h4>\n          <hr />\n        </section>\n\n        <section>\n          <form className=\"row\" onSubmit={handleAirdrop}>\n            <div className=\"col\">\n              <label htmlFor=\"\" style={{ textAlign: \"center\", margin: \"20px\" }}>\n                Input your registered CORE address to login\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Input your CORE address\"\n                required\n                name=\"address\"\n                onChange={handleChange}\n              />\n            </div>\n            <button type=\"submit\" disabled={isFetching}>\n              {isFetching ? \"Please wait...\" : \"SUBMIT\"}\n            </button>\n          </form>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["isFetching","useSelector","state","user","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","inputs","setInputs","handleAirdrop","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","loginStart","axios","_objectSpread","sent","loginSuccess","data","t0","alert","response","loginFailure","stop","_x","apply","arguments","_jsxs","className","children","_jsx","Topbar","onSubmit","htmlFor","style","textAlign","margin","type","placeholder","required","name","onChange","_defineProperty","target","value","disabled"],"sourceRoot":""}